# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
# Usually these files are written by a python script from a template
# before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
testlog/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenvâ€™s lock file should be ignored.
#Pipfile.lock

# Pypoetry
# Poetry lock file (Include if sharing project, keep it commented for reference here).
#poetry.lock

# Celery beat schedule file
celerybeat-schedule

# dotenv environment variables file
.env
.secret

# virtualenv
venv/
ENV/

# Spyder project settings
.spyderproject
.spyproject

# PyCharm & IntelliJ
# Commenting these out because you should setup global ignores for IDE in your git config,
# not in each project's .gitignore
#.idea/

# VSCode
# Again, should be ignored globally in user settings
#.vscode/

# Node modules (if using Node.js in parts of the project)
node_modules/

# Log files
*.log

# Others
.DS_Store
Thumbs.db
